function addInput(){
  const htmlInputCurrentPage = '<input type="hidden" id="current_page" />';
  const htmlInputShowPerPage = '<input type="hidden" id="show_per_page" />';
  const htmlPagination = "<div id='page_navigation'></div>";
  $('.chContent-Body-Page-RecentOrders-Wrapper').prepend(htmlInputCurrentPage+htmlInputShowPerPage);
  $('.chContent-Body-Page-General').append(htmlPagination);
}

$( document ).ready(function() {
  addInput();
  $('#results-count').html(function(i, v){
    return v.replace(/(\d)/g, '<span class="number">$1</span>');
  }); 
});

if(document.getElementsByName('ch-order-search')[0]) {
  document.getElementsByName('ch-order-search')[0].placeholder='Search your product or your order';
}

//how much items per page to show
var show_per_page = 4; 
//getting the amount of elements inside pagingBox div
var number_of_items = $('.chContent-Body-Page-RecentOrders-Wrapper-Item').length;
//calculate the number of pages we are going to have
var number_of_pages = Math.ceil(number_of_items/show_per_page);
jQuery(document).ready(function () {

  //Pagination JS
 
  //set the value of our hidden input fields
  $('#current_page').val(0);
  $('#show_per_page').val(show_per_page);

  //now when we got all we need for the navigation let's make it '
		
  /* 
  what are we going to have in the navigation?
    - link to previous page
    - links to specific pages
    - link to next page
  */
  var navigation_html = '<div class="previous_link disable">Prev</div>';
  var current_link = 0;
  while(number_of_pages > current_link){
    navigation_html += '<div class="page_link" data-link="' + current_link +'" longdesc="' + current_link +'">'+ (current_link + 1) +'</div>';
    current_link++;
  }

  navigation_html += '<div class="next_link">Next</div>';
  $('#page_navigation').html(navigation_html);
  $('#page_navigation').show();

  //add active_page class to the first page link
  $('#page_navigation .page_link:first').addClass('active_page');

  //hide all the elements inside pagingBox div
  $('.chContent-Body-Page-RecentOrders-Wrapper').children('.chContent-Body-Page-RecentOrders-Wrapper-Item').css('display', 'none');

  //and show the first n (show_per_page) elements
  $('.chContent-Body-Page-RecentOrders-Wrapper').children('.chContent-Body-Page-RecentOrders-Wrapper-Item').slice(0, show_per_page).css('display', 'flex');
});

//Pagination JS

function previous(){
  var new_page = parseInt($('#current_page').val()) - 1;
	//if there is an item before the current active link run the function
	if($('.active_page').prev('.page_link').length==true){
		go_to_page(new_page);
	}
}

function next(){
	var new_page = parseInt($('#current_page').val()) + 1;
	//if there is an item after the current active link run the function
	if($('.active_page').next('.page_link').length==true){
		go_to_page(new_page);
	}
}
function go_to_page(page_num){
	//get the number of items shown per page
	var show_per_page = parseInt($('#show_per_page').val());
	
	//get the element number where to start the slice from
	var start_from = page_num * show_per_page;
	
	//get the element number where to end the slice
	var end_on = start_from + show_per_page;

  console.log(page_num);
  console.log(start_from);
  console.log(end_on);

	//hide all children elements of pagingBox div, get specific items and show them
	$('.chContent-Body-Page-RecentOrders-Wrapper').children('.chContent-Body-Page-RecentOrders-Wrapper-Item').css('display', 'none').slice(start_from, end_on).css('display', 'block');
	
	/*get the page link that has longdesc attribute of the current page and add active_page class to it
	and remove that class from previously active page link*/
	$('.page_link[longdesc=' + page_num +']').addClass('active_page').siblings('.active_page').removeClass('active_page');
	
	//update the current page input field
	$('#current_page').val(page_num);

  if(page_num == parseInt(number_of_pages - 1)) {
    $('.previous_link').removeClass('disable');
    $('.next_link').addClass('disable');
  } else if(page_num == 0) {
    $('.next_link').removeClass('disable');
    $('.previous_link').addClass('disable');
  }
}

 $( document ).on('click', '.previous_link', function() {
   previous();
 });

 $( document ).on('click', '.next_link', function() {
   next();
 });

 $( document ).on('click', '.page_link', function() {
   var currentPageData = $(this).attr('data-link');
   go_to_page(currentPageData);
 });

$(document).ready(function() {  
  $( ".chCBPROWID-Actions-OrderNo" ).each(function( index, element ) {
    const valueId = $(this).text();
    const valueDownload = $(valueId).attr('data-download');
    const htmlActionDownload = '<a alt="download link" class="chButton download" target="_blank" href="'+ valueDownload +'"><span>Download here</span></a>';
    $(this).parents('.chCBPROWID-Actions').find('.cho-pu').append(htmlActionDownload);
  });

  if($('.container.order').length > 0) {
    const valueDownload = $('.container.order').attr('data-download');
    const htmlActionDownload = '<a alt="download link" class="chButton download" target="_blank" href="'+ valueDownload +'"><span>Download here</span></a>';

    $('.chContent-BPCW-Order--Details-OtherActions').prepend(htmlActionDownload);

    $('.chContent-BPCW-Order--Details-Table-Headings').append('<span class="format">Format</span>')

    $('a.chProductLink').each(function( index, element ) {
      const allIElements = $(this).find('i');
      var secondIElement = allIElements.eq(1);

      var textContent = secondIElement.text();
  
      // Convert the text to lowercase and replace whitespace with hyphen
      var modifiedText = textContent.toLowerCase().replace(/\s+/g, '-');
      
      secondIElement.addClass('format-element');
      $(this).parents('.chContent-BPCW-Order--Details-Product').append('<div class="chProductFormat"><span class="'+ modifiedText +'"><span class="text">'+ textContent +'</span></span></div>')
    });

    $('.order-summary__body tr').each(function( index, element ) {
      const targetSku = $(this).attr('data-sku');
      // Filter the div elements to find the one containing the SKUs

      const tagValue = $(this).attr('data-poly').toLowerCase().split('poly')[0].trim();

      var productDetailsDiv = $('.chProductSku').filter(function() {
        return $(this).text().trim() === targetSku;
      }).closest('.chContent-BPCW-Order--Details-Product');

      productDetailsDiv.find('.chProductDetails .chPDL').prepend('<div class="product-tag tag-'+ tagValue +'"><span>'+ $(this).attr('data-poly') +'</span></div>');
    });

    let billing = window.billingAddress; 
    let customer = window.customerInfo;

    const billingAddressDiv = document.querySelector('.chos1 p');
    const { first_name, address1, phone } = JSON.parse(billing);
    const { email, vatNumber } = customer;

    console.log(customer);

    const html = `
        <b>${first_name}</b>
        <span class="icon"><i class="fas fa-address-card"></i>${address1}</span>
        <span class="icon"><i class="fas fa-envelope"></i>${email}</span>
        <span class="icon"><i class="fas fa-phone"></i>${phone}</span>
        <span class="icon"><i class="fas fa-vat"></i>${vatNumber}</span>
      `;

    billingAddressDiv.innerHTML = html;

    const chflElements = document.querySelectorAll('.chContent-BPCW-Order--Details-Status i');

    // Loop through each element and capitalize the text within the <i> tag
    chflElements.forEach((chflElement) => {
      const capitalizedText = chflElement.textContent.toLowerCase();
        chflElement.textContent = capitalizedText;
    });

    const statusElements = document.querySelectorAll('.chContent-BPCW-Order--Details-Status-Info');

    // Loop through each element and capitalize the text within the <i> tag
    statusElements.forEach((statusElements) => {
      const iTagText = statusElements.querySelector('i').textContent.trim();
      const contentText = statusElements.textContent.replace(iTagText, '').trim();

      const newDiv = document.createElement('div');
      newDiv.textContent = contentText;
      statusElements.innerHTML = `<i>${iTagText}</i>${newDiv.outerHTML}`;
    });
  }
});
