<div class="container">
  {%- if cart.item_count == 0 -%}
    <div class="empty-state">
      <div class="empty-state__icon-wrapper">
        {%- render 'icon' with 'cart', width: 32, height: 32, stroke_width: 1 -%}
        <span class="count-bubble count-bubble--lg">0</span>
      </div>

      <div class="prose">
        <p class="h4">{{ 'cart.general.empty' | t }}</p>

        {%- assign button_content = 'cart.general.continue_shopping' | t -%}
        {%- render 'button', href: settings.cart_empty_button_link, size: 'xl', content: button_content -%}
      </div>
    </div>
  {%- else -%}
    <div class="page-spacer">
      <div class="cart">
        {%- if settings.cart_show_free_shipping_threshold -%}
          <div class="cart-header">
            {%- render 'free-shipping-bar' -%}
          </div>
        {%- endif -%}

        <div class="cart-order">
          <div class="cart-order__summary">
            <div class="cart-order__title">
              <h1 class="h5 h-stack gap-2">
                {{ 'cart.general.title' | t }}
                <cart-count class="count-bubble">{{ cart.item_count }}</cart-count>
              </h1>
            </div>
            {%- comment -%}
            ----------------------------------------------------------------------------------------------------------------
            ORDER SUMMARY
            ----------------------------------------------------------------------------------------------------------------
            {%- endcomment -%}
            <table class="order-summary">
              <thead class="order-summary__header" hidden>
                <tr>
                  <th>{{ 'customer.order.product' | t }}</th>
                  <th>{{ 'customer.order.quantity' | t }}</th>
                  <th>{{ 'customer.order.total' | t }}</th>
                  <th></th>
                </tr>
              </thead>

              <tbody class="order-summary__body">
                {%- for line_item in cart.items -%}
                  {%- assign line_max_quantity = '' -%}

                  {%- if line_item.variant.inventory_management != blank and line_item.variant.inventory_policy == 'deny' -%}
                    {%- assign line_max_quantity = line_item.variant.inventory_quantity -%}
                  {%- endif -%}

                  <tr>
                    <td>
                      {%- if line_item.variant.inventory_management != blank and line_item.variant.inventory_policy == 'deny' -%}
                        {%- assign line_max_quantity = line_item.variant.inventory_quantity -%}
                      {%- endif -%}

                      {%- assign isHighPoly = false -%}
                      {%- assign isLowPoly = false -%}
                      {%- assign is2DImages = false -%}

                      {%- assign card_class = 'line-item__media-wrapper' -%}
                      {%- for tag in line_item.product.tags -%}
                        {%- case tag -%}
                          {%- when "High Poly"-%}
                            {%- assign card_class = card_class | append: ' line-item__media-wrapper--high-poly' -%}
                            {%- assign isHighPoly = true -%}
                            {%- break -%}
                          {%- when "Low Poly"-%}
                            {%- assign card_class = card_class | append: ' line-item__media-wrapper--low-poly' -%}
                            {%- assign isLowPoly = true -%}
                            {%- break -%}
                          {%- when "2D Images"-%}
                            {%- assign card_class = card_class | append: ' line-item__media-wrapper--2d-images' -%}
                            {%- assign is2DImages = true -%}
                            {%- break -%}
                        {%- endcase -%}
                      {%- endfor -%}

                      {%- capture productTag -%}
                        {%- if isLowPoly -%}
                          <div class="product-tag tag-low">
                            <span>{{ 'Low Poly' }}</span>
                          </div>
                        {%- elsif is2DImages -%}
                          <div class="product-tag tag-2d">
                            <span>{{ '2D Images' }}</span>
                          </div>
                        {%- else -%}
                          <div class="product-tag tag-high">
                            <span>{{ 'High Poly' }}</span>
                          </div>
                        {%- endif -%}
                      {%- endcapture -%}

                      <line-item class="line-item">
                        {%- if line_item.image != blank -%}
                          <div class="{{ card_class }}">
                            {{- line_item.image | image_url: width: line_item.image.width | image_tag: loading: 'lazy', sizes: '142px', widths: '284', class: 'line-item__media rounded-xs' -}}
                          </div>
                        {%- endif -%}

                        <div class="line-item__info">
                          <div class="v-stack gap-2 justify-items-start">
                            {{ productTag }}

                            {%- if line_item.url != blank -%}
                              <a href="{{ line_item.url }}" class="semibold">
                                {%- if line_item.product.metafields.custom.plants_name != blank -%}
                                  {{ line_item.product.metafields.custom.plants_name }}
                                  {%- for field in line_item.product.metafields.custom.common_namess.value -%}
                                    <span class="common_names"> â€¢ {{ field }}</span>
                                  {%- endfor -%}
                                {%- else -%}
                                  {{ line_item.product.title | default: line_item.title }}
                                {%- endif -%}
                              </a>
                            {%- else -%}
                              <p class="semibold">{{ line_item.product.title | default: line_item.title }}</p>
                            {%- endif -%}

                            <ul class="product-tags">
                              {%- for tag in line_item.product.tags -%}
                                {%- if tag contains 'Asia' or tag contains 'Europe' or tag contains 'America' or tag contains 'Middle East' or tag contains 'Oceania' or tag contains 'Africa' -%}
                                  <li class="{{ tag }}">{{ tag }}</li>
                                {%- endif -%}
                              {%- endfor -%}
                            </ul>
                          </div>

                          {%- if line_item.selling_plan_allocation -%}
                            <p class="text-sm text-subdued">{{ line_item.selling_plan_allocation.selling_plan.name }}</p>
                          {%- endif -%}

                          {%- unless line_item.properties == blank -%}
                            <ul class="list-disc">
                              {%- for property in line_item.properties -%}
                                {%- assign first_character_in_key = property.first | truncate: 1, '' -%}

                                {%- if property.last == blank or first_character_in_key == '_' -%}
                                  {%- continue -%}
                                {%- endif -%}

                                <li class="text-sm text-subdued">
                                  {%- if property.last contains '/uploads/' -%}
                                    <a href="{{ property.last }}" class="link">{{ property.last | split: '/' | last }}</a>
                                  {%- else -%}
                                    {{ property.first }}: {{ property.last }}
                                  {%- endif -%}
                                </li>
                              {%- endfor -%}
                            </ul>
                          {%- endunless -%}

                          {%- if line_item.line_level_discount_allocations != blank -%}
                            <ul class="contents" role="list">
                              {%- for discount_allocation in line_item.line_level_discount_allocations -%}
                                <li class="badge">
                                  {%- render 'icon' with 'discount' -%} {{ discount_allocation.discount_application.title }} (-{{ discount_allocation.amount | money }})
                                </li>
                              {%- endfor -%}
                            </ul>
                          {%- endif -%}
                        </div>

                        {%- if show_desktop_quantity -%}
                          <div class="line-item__actions text-subdued hidden sm:block">
                            <line-item-quantity class="v-stack gap-2">
                              <input class="quantity-input" type="hidden" is="quantity-input" inputmode="numeric" {% if line_max_quantity %}max="{{ line_max_quantity }}"{% endif %} data-line-key="{{ line_item.key }}" aria-label="{{ 'cart.order.change_quantity' | t | escape }}" value="{{ line_item.quantity }}">

                              <a href="{{ line_item.url_to_remove }}" title="{{ 'Remove' }}">
                                <span class="sr-only">{{ 'cart.order.remove' | t }}</span>
                                {%- render 'icon' with 'trash' -%}
                              </a>
                            </line-item-quantity>
                          </div>
                        {%- endif -%}
                      </line-item>
                    </td>

                    <td class="align-center text-center">
                      {%- unless line_item.product.has_only_default_variant or line_item.gift_card -%}
                        <div class="h-stack gap-2 line-item__variant-edit">
                          {%- assign value = line_item.variant.title -%}
                          {%- assign firstWord = value | split: " " | first | handleize -%}
                          {%- assign lastWord = value | split: " " | last | handleize -%}
                          {%- assign swatchImage = firstWord | prepend: 'image_swatch_' -%}
                          {%- assign swatchImageLast = lastWord | prepend: 'image_swatch_' -%}
                          {%- if firstWord == '3ds' or firstWord == 'growfx' or firstWord == 'fbx' or firstWord == 'cinema' or firstWord == 'sketchup' or firstWord == 'twinmotion' or firstWord == 'blender' or firstWord == 'rhinoceros' or firstWord == 'redshift' or firstWord == 'unreal' or firstWord == 'enscape' or firstWord == 'hdri' -%}
                            {{- settings[swatchImage] | image_url: width: 100 | image_tag: loading: 'lazy', class: 'image-value', alt: value -}}
                          {%- elsif lastWord == 'growfx' -%}
                            {{- settings[swatchImageLast] | image_url: width: 100 | image_tag: loading: 'lazy', class: 'image-value', alt: value -}}
                          {%- endif -%}

                          <p class="text-value">{{ value }}</p>

                          <button type="button" aria-controls="quick-edit-{{ line_item.id }}" aria-expanded="false" aria-busy="false" class="button-value" title="{{ 'Change format' }}">
                            {%- render 'icon' with 'edit' -%}
                          </button>
                        </div>

                        <quick-edit-drawer id="quick-edit-{{ line_item.id }}" header-bordered open-from="left" role="region" aria-live="polite" class="quick-buy-drawer quick-buy-drawer--edit drawer">
                          <p class="text-with-icon gap-2 h5" slot="header">
                            {%- render 'icon' with 'edit' -%}
                            {{ 'Change Format' }}
                          </p>
                          <div class="quick-buy-drawer__info">
                            <p>{{ 'Please select from the following formats:' }}</p>
                            <div class="product-info__variant-picker">
                              <variant-update-picker class="variant-picker" current-id="{{ line_item.variant.id }}" update-button=".button-{{ line_item.variant.id }}">
                                {%- for option in line_item.product.options_with_values -%}
                                  {%- assign option_downcase = option.name | downcase -%}
                                  {%- assign name = 'option' | append: option.position -%}

                                  <fieldset class="variant-picker__option no-js:hidden">
                                    <div class="variant-picker__option-info">
                                      <p data-variant-value>{{ line_item.variant.title }}</p>
                                    </div>

                                    <div>
                                      <div data-option-selector class="variant-picker__option-values wrap gap-1">
                                        {%- for value in option.values -%}
                                          {%- capture id -%}edit-swatch-{{ 'now' | date: '%N' }}{%- endcapture -%}
                                          {%- assign selected = false -%}

                                          {%- if value == line_item.variant.title -%}
                                            {%- assign selected = true -%}
                                          {%- endif -%}

                                          {%- assign variant_for_value = line_item.product.variants | where: name, value | first -%}

                                          <input class="sr-only" type="radio" name="{{ name }}" id="{{ id | escape }}" value="{{ value | escape }}" variant-id="{{ variant_for_value.id }}" {% if selected %}checked="checked"{% endif %}>

                                          <label class="block-swatch" for="{{ id | escape }}" data-option-value>
                                            {%- assign firstWord = value | split: " " | first | handleize -%}
                                            {%- assign lastWord = value | split: " " | last | handleize -%}
                                            {%- assign swatchImage = firstWord | prepend: 'image_swatch_' -%}
                                            {%- assign swatchImageLast = lastWord | prepend: 'image_swatch_' -%}
                                            {%- if firstWord == '3ds' or firstWord == 'growfx' or firstWord == 'fbx' or firstWord == 'cinema' or firstWord == 'sketchup' or firstWord == 'twinmotion' or firstWord == 'blender' or firstWord == 'rhinoceros' or firstWord == 'redshift' or firstWord == 'unreal' or firstWord == 'enscape' or firstWord == 'hdri' -%}
                                              {{- settings[swatchImage] | image_url: width: 100 | image_tag: loading: 'lazy', class: 'block-swatch__image', alt: value -}}
                                            {%- elsif lastWord == 'growfx' -%}
                                              {{- settings[swatchImageLast] | image_url: width: 100 | image_tag: loading: 'lazy', class: 'block-swatch__image', alt: value -}}
                                            {%- endif -%}
                                            <span class="text-value">{{ value }}</span>
                                          </label>
                                        {%- endfor -%}
                                      </div>
                                    </div>
                                  </fieldset>
                                {%- endfor -%}
                              </variant-update-picker>
                            </div>

                            <button type="button" class="button button-{{ line_item.variant.id }}" is="update-cart-button" current-variant-id="{{ line_item.variant.id }}" update-variant-id="{{ line_item.variant.id }}">
                              <div>{{ 'Apply' }}</div>
                              <span class="button__loader">
                                <span></span>
                                <span></span>
                                <span></span>
                              </span>
                            </button>
                          </div>
                        </quick-edit-drawer>
                      {%- endunless -%}
                    </td>

                    <td class="order-summary__price align-center text-end">
                      <span class="sm:hidden">{{ 'Price' }}</span>
                      {{ line_item.final_line_price | money }}
                    </td>

                    <td class="align-center text-center sm:text-end">
                      <line-item-quantity class="v-stack">
                        <input class="quantity-input" type="hidden" is="quantity-input" inputmode="numeric" {% if line_max_quantity != blank %}max="{{ line_max_quantity }}"{% endif %} data-line-key="{{ line_item.key }}" aria-label="{{ 'cart.order.change_quantity' | t | escape }}" value="{{ line_item.quantity }}">

                        <a href="{{ line_item.url_to_remove }}" title="{{ 'Remove' }}">
                          <div>
                            <span class="sr-only">{{ 'cart.order.remove' | t }}</span>
                            {%- render 'icon' with 'trash' -%}
                          </div>
                          <span class="button__loader">
                            <span></span>
                            <span></span>
                            <span></span>
                          </span>
                        </a>
                      </line-item-quantity>
                    </td>
                  </tr>
                {%- endfor -%}
              </tbody>
            </table>

            {%- comment -%}
            ----------------------------------------------------------------------------------------------------------------
            SHIPPING ESTIMATOR
            ----------------------------------------------------------------------------------------------------------------
            {%- endcomment -%}

            {%- if section.settings.show_shipping_estimator and cart.requires_shipping -%}
              {%- assign accordion_title = 'cart.shipping_estimator.estimate_shipping' | t -%}
              {%- capture accordion_content -%}{%- render 'shipping-estimator' -%}{%- endcapture -%}

              {%- render 'accordion', title: accordion_title, icon: 'picto-box', content: accordion_content, size: 'lg' -%}
            {%- endif -%}
          </div>

          <safe-sticky class="cart-order__recap v-stack gap-6">
            <form action="{{ routes.cart_url }}" method="POST" class="cart-form rounded">
              <div class="cart-order__title">
                <h2 class="h5 hidden sm:block">{{ 'Order Summary' }}</h2>
                <button type="button" class="cart-order__title-toggle sm:hidden">
                  {%- render 'icon' with 'chevron-nav-bottom' -%}
                </button>
              </div>
              <script>
                document.addEventListener('DOMContentLoaded', function () {
                  const btnSummaryToggle = document.querySelector('.cart-order__title-toggle');
                  const cartOrderRecap = document.querySelector('.cart-order__recap');

                  btnSummaryToggle.addEventListener('click', function () {
                    cartOrderRecap.classList.toggle('open');
                  });
                });
              </script>

              {%- assign noteBlock =  section.blocks | where: 'type', 'cart_note' | first -%}
              {%- for block in section.blocks -%}
                {%- case block.type -%}
                  {%- when '@app' -%}
                    {%- render block -%}

                  {%- when 'totals' -%}
                    <div class="cart-form__totals v-stack gap-4" {{ block.shopify_attributes }}>
                      {%- if block.settings.show_order_weight -%}
                        <div class="h-stack gap-4 justify-between">
                          <span>{{ 'cart.general.weight' | t }}</span>
                          <span class="medium">{{ cart.total_weight | weight_with_unit }}</span>
                        </div>
                      {%- endif -%}

                      <div class="h-stack gap-4 justify-between cart-form__subtotal">
                        <span>{{ 'cart.general.subtotal' | t }}</span>
                        <span class="medium price">{{ cart.items_subtotal_price | money }}</span>
                      </div>

                      {%- if noteBlock != blank -%}
                        <cart-note class="cart-form__note block" {{ noteBlock.shopify_attributes }}>
                          <h3>{{ 'Add a note' }}</h3>
                          <textarea id="input-{{ section.id }}-{{ 'now' | date: '%N' }}" class="textarea is-floating" is="resizable-textarea" name="note" placeholder="Enter your note" rows="3" {{ optional_attributes }}>{{- cart.note -}}</textarea>
                        </cart-note>
                      {%- endif -%}

                      {% for discount_application in cart.cart_level_discount_applications %}
                        <div class="h-stack gap-4 justify-between">
                          <div class="badge">
                            {%- render 'icon' with 'discount' -%} {{- discount_application.title -}}
                          </div>

                          <span class="text-subdued">-{{ discount_application.total_allocated_amount | money }}</span>
                        </div>
                      {% endfor %}

                      <div class="h-stack gap-4 justify-between cart--form__total">
                        <span class="h6 semibold">{{ 'cart.general.total' | t }}</span>
                        <span class="h6 semibold price">{{- cart.total_price | money_with_currency -}}</span>
                      </div>

                      {%- if block.settings.show_shipping_text -%}
                        {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                          <span class="cart-form__shipping">{{ 'cart.general.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}</span>
                        {%- elsif cart.taxes_included -%}
                          <span class="cart-form__shipping">{{ 'cart.general.taxes_included_but_shipping_at_checkout' | t }}</span>
                        {%- elsif shop.shipping_policy.body != blank -%}
                          <span class="cart-form__shipping">{{ 'cart.general.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}</span>
                        {%- else -%}
                          <span class="cart-form__shipping">{{ 'cart.general.taxes_and_shipping_at_checkout' | t }}</span>
                        {%- endif -%}
                      {%- endif -%}
                    </div>

                    <div class="cart-form__totals-minimize sm:hidden">
                      <div class="h-stack gap-4 justify-between cart--form__total">
                        <span class="h6 semibold">{{ 'cart.general.total' | t }}</span>
                        <span class="h6 semibold price">{{- cart.total_price | money_with_currency -}}</span>
                      </div>
                    </div>

                  {%- when 'text' -%}
                    {%- if block.settings.content != blank -%}
                      <div class="prose text-subdued" {{ block.shopify_attributes }}>
                        {{- block.settings.content -}}
                      </div>
                    {%- endif -%}

                  {%- when 'offer' -%}
                    {%- assign previous_block_index = forloop.index0 | minus: 1 -%}
                    {%- assign next_block_index = forloop.index0 | plus: 1 -%}

                    {%- if section.blocks[next_block_index].type == 'offer' -%}
                      <div class="v-stack gap-4">
                    {%- endif -%}

                    {%- render 'offer', block: block -%}

                    {%- if section.blocks[previous_block_index].type == 'offer' -%}
                      </div>
                    {%- endif -%}

                  {%- when 'accelerated_buttons' -%}
                    {% if additional_checkout_buttons %}
                      <div class="additional-checkout-buttons additional-checkout-buttons--vertical" {{ block.shopify_attributes }}>
                        {{- content_for_additional_checkout_buttons -}}
                      </div>
                    {% endif %}

                  {%- when 'checkout_button' -%}
                    {%- assign checkout_button = 'cart.general.checkout' | t -%}
                    {%- render 'button', type: 'button', icon: 'picto-lock', content: checkout_button, name: 'checkout-custom', stretch: true, block: block -%}
                {%- endcase -%}
              {%- endfor -%}
            </form>

            {%- if section.settings.show_payment_icons and shop.enabled_payment_types.size > 0 -%}
              <div class="v-stack gap-4">
                <span class="text-xs text-subdued text-center">{{ 'cart.general.we_accept' | t }}</span>

                <div class="h-stack gap-2 wrap justify-center">
                  {%- for type in shop.enabled_payment_types -%}
                    {{- type | payment_type_svg_tag -}}
                  {%- endfor -%}
                </div>
              </div>
            {%- endif -%}
          </safe-sticky>
        </div>
      </div>
    </div>
  {%- endif -%}
</div>

<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function(event) {
    document.querySelector('.button[name="checkout-custom"]').addEventListener('click', function(event){
      window.location.href = '/checkout';
    });
  });
</script>

{% schema %}
{
  "name": "Cart",
  "class": "shopify-section--main-cart",
  "tag": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "totals",
      "name": "Totals",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_order_weight",
          "label": "Show order weight",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "show_shipping_text",
          "label": "Show shipping/taxes text",
          "default": true
        }
      ]
    },
    {
      "type": "cart_note",
      "name": "Cart note",
      "limit": 1,
      "settings": [
        {
          "type": "number",
          "id": "max_length",
          "label": "Maximum number of characters"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "richtext",
          "id": "content",
          "label": "Content"
        }
      ]
    },
    {
      "type": "checkout_button",
      "name": "Checkout button",
      "limit": 1
    },
    {
      "type": "accelerated_buttons",
      "name": "Accelerated buttons",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Configure accelerated payment buttons in your [payment settings](https://www.shopify.com/admin/settings/payments)."
        }
      ]
    },
    {
      "type": "offer",
      "name": "Offer",
      "limit": 2,
      "settings": [
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "options": [
            {
              "value": "start",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            }
          ],
          "default": "start"
        },
        {
          "type": "select",
          "id": "icon_position",
          "label": "Icon position",
          "options": [
            {
              "value": "aligned",
              "label": "Aligned horizontally"
            },
            {
              "value": "stacked",
              "label": "Stacked"
            }
          ],
          "default": "aligned"
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "picto-coupon",
              "label": "Coupon",
              "group": "Shop"
            },
            {
              "value": "picto-percent",
              "label": "Percent",
              "group": "Shop"
            },
            {
              "value": "picto-gift",
              "label": "Gift",
              "group": "Shop"
            },
            {
              "value": "picto-star",
              "label": "Star",
              "group": "Shop"
            },
            {
              "value": "picto-like",
              "label": "Like",
              "group": "Shop"
            },
            {
              "value": "picto-building",
              "label": "Building",
              "group": "Shop"
            },
            {
              "value": "picto-love",
              "label": "Love",
              "group": "Shop"
            },
            {
              "value": "picto-award-gift",
              "label": "Award gift",
              "group": "Shop"
            },
            {
              "value": "picto-happy",
              "label": "Happy",
              "group": "Shop"
            },
            {
              "value": "picto-box",
              "label": "Box",
              "group": "Shipping"
            },
            {
              "value": "picto-pin",
              "label": "Pin",
              "group": "Shipping"
            },
            {
              "value": "picto-timer",
              "label": "Timer",
              "group": "Shipping"
            },
            {
              "value": "picto-validation",
              "label": "Validation",
              "group": "Shipping"
            },
            {
              "value": "picto-truck",
              "label": "Truck",
              "group": "Shipping"
            },
            {
              "value": "picto-return",
              "label": "Return",
              "group": "Shipping"
            },
            {
              "value": "picto-earth",
              "label": "Earth",
              "group": "Shipping"
            },
            {
              "value": "picto-plane",
              "label": "Plane",
              "group": "Shipping"
            },
            {
              "value": "picto-credit-card",
              "label": "Credit card",
              "group": "Payment & Security"
            },
            {
              "value": "picto-lock",
              "label": "Lock",
              "group": "Payment & Security"
            },
            {
              "value": "picto-shield",
              "label": "Shield",
              "group": "Payment & Security"
            },
            {
              "value": "picto-secure-profile",
              "label": "Secure profile",
              "group": "Payment & Security"
            },
            {
              "value": "picto-money",
              "label": "Money",
              "group": "Payment & Security"
            },
            {
              "value": "picto-recycle",
              "label": "Recycle",
              "group": "Ecology"
            },
            {
              "value": "picto-leaf",
              "label": "Leaf",
              "group": "Ecology"
            },
            {
              "value": "picto-tree",
              "label": "Tree",
              "group": "Ecology"
            },
            {
              "value": "picto-mobile-phone",
              "label": "Mobile phone",
              "group": "Communication"
            },
            {
              "value": "picto-phone",
              "label": "Phone",
              "group": "Communication"
            },
            {
              "value": "picto-chat",
              "label": "Chat",
              "group": "Communication"
            },
            {
              "value": "picto-customer-support",
              "label": "Customer support",
              "group": "Communication"
            },
            {
              "value": "picto-operator",
              "label": "Operator",
              "group": "Communication"
            },
            {
              "value": "picto-mailbox",
              "label": "Mailbox",
              "group": "Communication"
            },
            {
              "value": "picto-envelope",
              "label": "Envelope",
              "group": "Communication"
            },
            {
              "value": "picto-comment",
              "label": "Comment",
              "group": "Communication"
            },
            {
              "value": "picto-question",
              "label": "Question",
              "group": "Communication"
            },
            {
              "value": "picto-send",
              "label": "Send",
              "group": "Communication"
            },
            {
              "value": "picto-at-sign",
              "label": "At sign",
              "group": "Tech"
            },
            {
              "value": "picto-camera",
              "label": "Camera",
              "group": "Tech"
            },
            {
              "value": "picto-wifi",
              "label": "WiFi",
              "group": "Tech"
            },
            {
              "value": "picto-bluetooth",
              "label": "Bluetooth",
              "group": "Tech"
            },
            {
              "value": "picto-printer",
              "label": "Printer",
              "group": "Tech"
            },
            {
              "value": "picto-smart-watch",
              "label": "Smart watch",
              "group": "Tech"
            },
            {
              "value": "picto-coffee",
              "label": "Coffee",
              "group": "Food & Drink"
            },
            {
              "value": "picto-burger",
              "label": "Burger",
              "group": "Food & Drink"
            },
            {
              "value": "picto-beer",
              "label": "Beer",
              "group": "Food & Drink"
            },
            {
              "value": "picto-target",
              "label": "Target",
              "group": "Other"
            },
            {
              "value": "picto-document",
              "label": "Document",
              "group": "Other"
            },
            {
              "value": "picto-jewelry",
              "label": "Jewelry",
              "group": "Other"
            },
            {
              "value": "picto-music",
              "label": "Music",
              "group": "Other"
            },
            {
              "value": "picto-file",
              "label": "File",
              "group": "Other"
            },
            {
              "value": "picto-mask",
              "label": "Mask",
              "group": "Other"
            },
            {
              "value": "picto-stop",
              "label": "Stop",
              "group": "Other"
            }
          ],
          "default": "picto-coupon"
        },
        {
          "type": "image_picker",
          "id": "custom_icon",
          "label": "Custom icon",
          "info": "240 x 240px .png recommended"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 20,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "Icon width",
          "default": 24
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Shipping"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content",
          "default": "<p>Short content about your shipping rates or discounts.</p>"
        },
        {
          "type": "color",
          "id": "background",
          "label": "Background"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "show_shipping_estimator",
      "label": "Show shipping estimator",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_payment_icons",
      "label": "Show payment icons",
      "default": true
    }
  ]
}
{% endschema %}